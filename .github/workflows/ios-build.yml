name: Build and Deploy iOS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install Godot
        run: |
          brew install --cask godot
      
      - name: Download and install export templates
        run: |
          mkdir -p "/Users/runner/Library/Application Support/Godot/export_templates/4.4.stable"
          wget https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_export_templates.tpz
          unzip Godot_v4.4-stable_export_templates.tpz
          mv templates/* "/Users/runner/Library/Application Support/Godot/export_templates/4.4.stable/"
          
      - name: Set up certificates
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create keychain
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # Import certificate
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode > $RUNNER_TEMP/build_certificate.p12
          security import $RUNNER_TEMP/build_certificate.p12 -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
      
      - name: Setup provisioning profiles
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: Configure Godot export settings
        run: |
          # Check if export_presets.cfg exists and update if needed
          if [ -f "export_presets.cfg" ]; then
            echo "Verifying export settings..."
            # Make sure code signing is set correctly if not already
            grep -q "application/code_sign_identity_debug=\"\"" export_presets.cfg && sed -i '' 's/application\/code_sign_identity_debug=""/application\/code_sign_identity_debug="Apple Development"/' export_presets.cfg
            # Set signature if empty
            grep -q "application/signature=\"\"" export_presets.cfg && sed -i '' 's/application\/signature=""/application\/signature="${TEAM_IDENTIFIER}"/' export_presets.cfg
          else
            echo "No export_presets.cfg found. Please create one in Godot first."
            exit 1
          fi
      
      - name: Build Godot project
        run: |
          mkdir -p builds/ios
          godot --headless --export-debug "iOS" builds/ios/Waypoint.ipa
          
      - name: Upload app to TestFlight
        env:
          APPLE_ID_USERNAME: ${{ secrets.APPLE_ID_USERNAME }}
          APPLE_ID_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_APP_SPECIFIC_PASSWORD }}
        run: |
          xcrun altool --upload-app -f builds/ios/Waypoint.ipa -t ios -u "$APPLE_ID_USERNAME" -p "$APPLE_ID_APP_SPECIFIC_PASSWORD"