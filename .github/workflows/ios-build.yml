name: Build and Deploy iOS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Install Godot
        run: |
          brew install --cask godot
      
      - name: Download and install export templates
        run: |
          mkdir -p "/Users/runner/Library/Application Support/Godot/export_templates/4.4.stable"
          wget https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_export_templates.tpz
          unzip Godot_v4.4-stable_export_templates.tpz
          mv templates/* "/Users/runner/Library/Application Support/Godot/export_templates/4.4.stable/"
          
      - name: Set up certificates
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # Create keychain
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # Import certificate
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode > $RUNNER_TEMP/build_certificate.p12
          security import $RUNNER_TEMP/build_certificate.p12 -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
      
      - name: Setup provisioning profiles
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles/
          # Decode profile and save with UUID in filename
          UUID=$(echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode | grep -a -A 1 "UUID" | grep -a "<string>" | sed -E 's/.*<string>(.*)<\/string>.*/\1/')
          echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision
          # List profiles to verify
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Create export_options.plist
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          cat > export_options.plist << EOL
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>teamID</key>
              <string>${APPLE_TEAM_ID}</string>
              <key>provisioningProfiles</key>
              <dict>
                  <key>dev.allbark.waypoint</key>
                  <string>Waypoint_Development</string>
              </dict>
          </dict>
          </plist>
          EOL

      - name: Build Godot project with xcodebuild
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          mkdir -p builds/ios
          # First, have Godot generate the Xcode project
          godot --headless --export-debug "iOS" builds/ios/Waypoint.xcodeproj
          
          # Now build the IPA using xcodebuild directly
          cd builds/ios
          xcodebuild -project Waypoint.xcodeproj -scheme Waypoint -configuration Debug -destination generic/platform=iOS -allowProvisioningUpdates archive -archivePath Waypoint.xcarchive
          xcodebuild -exportArchive -archivePath Waypoint.xcarchive -exportOptionsPlist ../../export_options.plist -exportPath .
          
      - name: Upload app to TestFlight
        env:
          APPLE_ID_USERNAME: ${{ secrets.APPLE_ID_USERNAME }}
          APPLE_ID_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_APP_SPECIFIC_PASSWORD }}
        run: |
          xcrun altool --upload-app -f builds/ios/Waypoint.ipa -t ios -u "$APPLE_ID_USERNAME" -p "$APPLE_ID_APP_SPECIFIC_PASSWORD"